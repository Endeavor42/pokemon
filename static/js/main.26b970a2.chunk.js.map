{"version":3,"sources":["components/context/DataContext.jsx","components/pokemodal/Combat.jsx","components/PokeModal.jsx","App.js","index.js"],"names":["DataContext","createContext","Combat","useContext","storeCard","useEffect","className","stats","map","skills","index","key","stat","name","PokeModal","storeMoves","reveal","close","card","useState","increment","moves","id","filter","move","uuid","Modal","show","size","onHide","centered","Header","closeButton","Title","src","alt","ProgressBar","now","label","Body","variant","Footer","Button","onClick","App","pokedex","setPokedex","wildPokemon","setWildPokemon","setStoreCard","encounterWildPokemon","loading","setLoading","axios","get","min","Math","ceil","max","floor","random","pokeId","then","response","data","setShow","Spinner","animation","pokemon","state","p","length","sort","a","b","console","log","handleShow","e","stopPropagation","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26b970a2.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const DataContext = createContext(null);\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { DataContext } from \"../context/DataContext\";\r\n\r\nexport default function Combat() {\r\n  const [storeCard] = useContext(DataContext);\r\n  //   storeCard.id && console.log(storeCard.name);\r\n\r\n  useEffect(() => {\r\n    // statistics && console.log(storeCard);\r\n  }, []);\r\n\r\n  // async function API(){\r\n  //   const baseUrl = 'http://www.pokestadium.com/sprites/black-white/animated/groudon.gif';\r\n  //   const response = await fetch(baseUrl);\r\n  //   const data = await response.json();\r\n  //   return data;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"mt-2\">\r\n        {storeCard.stats.map((skills, index) => (\r\n          <li className=\"skills\" key={index}>\r\n            {skills.stat.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Modal, Button, ProgressBar } from \"react-bootstrap\";\r\nimport uuid from \"uuid\";\r\nimport Combat from \"./pokemodal/Combat\";\r\nimport { DataContext } from \"./context/DataContext\";\r\n\r\nexport default function PokeModal({ reveal, close, card }) {\r\n  const [increment, setIncrement] = useState(60);\r\n\r\n  const { moves } = card;\r\n  let [storeCard] = useContext(DataContext);\r\n\r\n  let storeMoves;\r\n\r\n  useEffect(() => {\r\n    // statistics && console.log(storeCard);\r\n  }, [storeCard]);\r\n\r\n  // NOTES: we keep changing the state, which causes re-rendering\r\n  if (card.id) {\r\n    storeMoves = moves\r\n      .filter((move, index) => index < 3)\r\n      .map((move, index) => <li key={uuid()}>{move.move.name}</li>);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={reveal} size=\"lg\" onHide={close} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <img\r\n              src={\"https://img.pokemondb.net/sprites/items/master-ball.png\"}\r\n              alt=\"\"\r\n            />\r\n            <p>\r\n              #{card.id} - {card.name}\r\n            </p>\r\n            <ProgressBar now={increment} label={`${increment}`} />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"grid-container\">\r\n          <div className=\"item1\">\r\n            <img\r\n              src={\r\n                \"https://img.pokemondb.net/sprites/black-white/anim/normal/\" +\r\n                card.name +\r\n                \".gif\"\r\n              }\r\n              className=\"sprite\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"item2\">\r\n            <Combat />\r\n          </div>\r\n          <div className=\"item3 w-100\">\r\n            <p>Progressbar</p>\r\n            <ProgressBar\r\n              variant=\"length\"\r\n              now={increment}\r\n              label={`${increment}`}\r\n            />\r\n            <p>{storeMoves}</p>\r\n          </div>\r\n          <div className=\"item4\">details</div>\r\n          <div className=\"item5\">profile-left</div>\r\n          <div className=\"item6\">profile-right</div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={close}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n// Use the id to fetch the image and data\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PokeModal from \"./components/PokeModal\";\r\nimport PokeBerry from \"./components/PokeBerry\";\r\nimport { DataContext } from \"./components/context/DataContext\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  const [pokedex, setPokedex] = useState([]);\r\n  const [wildPokemon, setWildPokemon] = useState({});\r\n  const [storeCard, setStoreCard] = useState({});\r\n  const [increment, setIncrement] = useState(60);\r\n\r\n  // const [wildBerry, setWildBerry] = useState({}); // ---\r\n\r\n  useEffect(() => {\r\n    encounterWildPokemon();\r\n    // berries();\r\n  }, []);\r\n\r\n  const pokeId = () => {\r\n    const min = Math.ceil(150);\r\n    const max = Math.floor(200);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const encounterWildPokemon = () => {\r\n    setLoading(true);\r\n    return axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokeId()}`)\r\n      .then(response => {\r\n        // response.data && console.log(\"Received the data\");\r\n        setWildPokemon(response.data);\r\n        response.data && setLoading(false);\r\n      });\r\n  };\r\n\r\n  //wildBerry.id && console.log(wildBerry); // MISTAKE: wildBerry is still true. Must be more specific, wildberry.id\r\n\r\n  const catchPokemon = pokemon => {\r\n    setPokedex(state => {\r\n      const monExists = state.filter(p => pokemon.id === p.id).length > 0; // mostly false. Only true if you catch the same pokemon\r\n      if (!monExists) {\r\n        state = [...state, pokemon];\r\n        state.sort(function(a, b) {\r\n          return a.id - b.id;\r\n        });\r\n      }\r\n      return state;\r\n    });\r\n    encounterWildPokemon(); // MISTAKE: we have to call this function whenever we're done\r\n  };\r\n\r\n  const releasePokemon = id => {\r\n    setPokedex(state => state.filter(p => p.id !== id));\r\n  };\r\n\r\n  // PokeModal\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleShow = pokemon => {\r\n    setShow(true);\r\n    setStoreCard(pokemon);\r\n    console.log(\"retrieved card\");\r\n  };\r\n\r\n  // JSX\r\n  return loading ? (\r\n    <div className=\"loading\">\r\n      <Spinner animation=\"grow\" />\r\n    </div>\r\n  ) : (\r\n    <div className=\"app-wrapper container\">\r\n      {/* {console.log(wildPokemon)} */}\r\n      <header>\r\n        <h1 className=\"title\">React Hooks</h1>\r\n        <h3 className=\"subtitle\">With Pokémon</h3>\r\n        <h1>Lorem Ipsum</h1>\r\n      </header>\r\n      <section className=\"wild-pokemon\">\r\n        <h2>Wild Encounter</h2>\r\n\r\n        <img\r\n          src={\r\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\r\n            wildPokemon.id +\r\n            \".png\"\r\n          }\r\n          className=\"sprite\"\r\n          alt=\"\"\r\n        />\r\n        <h3>{wildPokemon.name}</h3>\r\n        <button className=\"catch-btn\" onClick={() => catchPokemon(wildPokemon)}>\r\n          CATCH\r\n        </button>\r\n      </section>\r\n\r\n      {/* Pokedex */}\r\n      <section className=\"pokedex\">\r\n        <h2>Pokédex</h2>\r\n        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit.</p>\r\n        <div className=\"pokedex-list\">\r\n          {pokedex.map(pokemon => (\r\n            <div\r\n              className=\"pokemon\"\r\n              key={pokemon.id}\r\n              onClick={() => handleShow(pokemon)}\r\n            >\r\n              <img\r\n                src={\r\n                  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\r\n                  pokemon.id +\r\n                  \".png\"\r\n                }\r\n                className=\"sprite\"\r\n                alt=\"\"\r\n              />\r\n              <h3 className=\"pokemon-name\">{pokemon.name}</h3>\r\n              <button\r\n                className=\"remove\"\r\n                onClick={e => {\r\n                  releasePokemon(pokemon.id);\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          <DataContext.Provider value={[storeCard]}>\r\n            <PokeModal close={handleClose} reveal={show} card={storeCard} />\r\n          </DataContext.Provider>\r\n        </div>\r\n      </section>\r\n      {/* <PokeBerry /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/main.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}