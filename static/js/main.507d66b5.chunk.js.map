{"version":3,"sources":["components/context/DataContext.jsx","components/pokemodal/Combat.jsx","components/PokeModal.jsx","App.js","index.js"],"names":["DataContext","createContext","Combat","useContext","storeCard","useEffect","className","stats","map","skills","index","key","stat","name","PokeModal","storeMoves","reveal","close","card","moves","id","filter","move","uuid","Modal","show","size","onHide","centered","Header","closeButton","Title","src","alt","Body","Footer","Button","variant","onClick","App","useState","pokedex","setPokedex","wildPokemon","setWildPokemon","setStoreCard","encounterWildPokemon","loading","setLoading","axios","get","min","Math","ceil","max","floor","random","pokeId","then","response","data","setShow","pokemon","state","p","length","sort","a","b","console","log","handleShow","e","stopPropagation","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.507d66b5.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const DataContext = createContext(null);\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { DataContext } from \"../context/DataContext\";\r\n\r\nexport default function Combat() {\r\n  const [storeCard] = useContext(DataContext);\r\n  //   storeCard.id && console.log(storeCard.name);\r\n\r\n  useEffect(() => {\r\n    // statistics && console.log(storeCard);\r\n  }, []);\r\n\r\n  // async function API(){\r\n  //   const baseUrl = 'http://www.pokestadium.com/sprites/black-white/animated/groudon.gif';\r\n  //   const response = await fetch(baseUrl);\r\n  //   const data = await response.json();\r\n  //   return data;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"mt-2\">\r\n        {storeCard.stats.map((skills, index) => (\r\n          <li className=\"skills\" key={index}>\r\n            {skills.stat.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport uuid from \"uuid\";\r\nimport Combat from \"./pokemodal/Combat\";\r\nimport { DataContext } from \"./context/DataContext\";\r\n\r\nexport default function PokeModal({ reveal, close, card }) {\r\n  const { moves } = card;\r\n  let [storeCard] = useContext(DataContext);\r\n\r\n  let storeMoves;\r\n\r\n  useEffect(() => {\r\n    // statistics && console.log(storeCard);\r\n  }, [storeCard]);\r\n\r\n  // NOTES: we keep changing the state, which causes re-rendering\r\n  if (card.id) {\r\n    storeMoves = moves\r\n      .filter((move, index) => index < 3)\r\n      .map((move, index) => <li key={uuid()}>{move.move.name}</li>);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={reveal} size=\"lg\" onHide={close} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <img\r\n              src={\"https://img.pokemondb.net/sprites/items/master-ball.png\"}\r\n              alt=\"\"\r\n            />\r\n            <p>\r\n              #{card.id} - {card.name}\r\n            </p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"grid-container\">\r\n          <div className=\"item1\">\r\n            <img\r\n              src={\r\n                \"https://img.pokemondb.net/sprites/black-white/anim/normal/\" +\r\n                card.name +\r\n                \".gif\"\r\n              }\r\n              className=\"sprite\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"item2\">\r\n            <Combat />\r\n          </div>\r\n          <div className=\"item3\">\r\n            <p>Progressbar</p>\r\n            <p>{storeMoves}</p>\r\n          </div>\r\n          <div className=\"item4\">details</div>\r\n          <div className=\"item5\">profile-left</div>\r\n          <div className=\"item6\">profile-right</div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={close}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n// Use the id to fetch the image and data\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PokeModal from \"./components/PokeModal\";\r\nimport PokeBerry from \"./components/PokeBerry\";\r\nimport { DataContext } from \"./components/context/DataContext\";\r\n\r\nfunction App() {\r\n  const [pokedex, setPokedex] = useState([]);\r\n  const [wildPokemon, setWildPokemon] = useState({});\r\n  const [storeCard, setStoreCard] = useState({});\r\n  // const [wildBerry, setWildBerry] = useState({}); // ---\r\n\r\n  useEffect(() => {\r\n    encounterWildPokemon();\r\n    // berries();\r\n  }, []);\r\n\r\n  const pokeId = () => {\r\n    const min = Math.ceil(1);\r\n    const max = Math.floor(30);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const encounterWildPokemon = () => {\r\n    setLoading(true);\r\n    return axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokeId()}`)\r\n      .then(response => {\r\n        // response.data && console.log(\"Received the data\");\r\n        setWildPokemon(response.data);\r\n        response.data && setLoading(false);\r\n      });\r\n  };\r\n\r\n  //wildBerry.id && console.log(wildBerry); // MISTAKE: wildBerry is still true. Must be more specific, wildberry.id\r\n\r\n  const catchPokemon = pokemon => {\r\n    setPokedex(state => {\r\n      const monExists = state.filter(p => pokemon.id === p.id).length > 0; // mostly false. Only true if you catch the same pokemon\r\n      if (!monExists) {\r\n        state = [...state, pokemon];\r\n        state.sort(function(a, b) {\r\n          return a.id - b.id;\r\n        });\r\n      }\r\n      return state;\r\n    });\r\n    encounterWildPokemon(); // MISTAKE: we have to call this function whenever we're done\r\n  };\r\n\r\n  const releasePokemon = id => {\r\n    setPokedex(state => state.filter(p => p.id !== id));\r\n  };\r\n\r\n  // PokeModal\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleShow = pokemon => {\r\n    setShow(true);\r\n    setStoreCard(pokemon);\r\n    console.log(\"retrieved card\");\r\n  };\r\n\r\n  // JSX\r\n  return loading ? (\r\n    <div className=\"loading\">\r\n      <h1>Loading...</h1>\r\n    </div>\r\n  ) : (\r\n    <div className=\"app-wrapper container\">\r\n      {/* {console.log(wildPokemon)} */}\r\n      <header>\r\n        <h1 className=\"title\">React Hooks</h1>\r\n        <h3 className=\"subtitle\">With Pok√©mon</h3>\r\n      </header>\r\n      <section className=\"wild-pokemon\">\r\n        <h2>Wild Encounter</h2>\r\n        <img\r\n          src={\r\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\r\n            wildPokemon.id +\r\n            \".png\"\r\n          }\r\n          className=\"sprite\"\r\n          alt=\"\"\r\n        />\r\n        <h3>{wildPokemon.name}</h3>\r\n        <button className=\"catch-btn\" onClick={() => catchPokemon(wildPokemon)}>\r\n          CATCH\r\n        </button>\r\n      </section>\r\n\r\n      {/* Pokedex */}\r\n      <section className=\"pokedex\">\r\n        <h2>Pok√©dex</h2>\r\n        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit.</p>\r\n        <div className=\"pokedex-list\">\r\n          {pokedex.map(pokemon => (\r\n            <div\r\n              className=\"pokemon\"\r\n              key={pokemon.id}\r\n              onClick={() => handleShow(pokemon)}\r\n            >\r\n              <img\r\n                src={\r\n                  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\r\n                  pokemon.id +\r\n                  \".png\"\r\n                }\r\n                className=\"sprite\"\r\n                alt=\"\"\r\n              />\r\n              <h3 className=\"pokemon-name\">{pokemon.name}</h3>\r\n              <button\r\n                className=\"remove\"\r\n                onClick={e => {\r\n                  releasePokemon(pokemon.id);\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          <DataContext.Provider value={[storeCard]}>\r\n            <PokeModal close={handleClose} reveal={show} card={storeCard} />\r\n          </DataContext.Provider>\r\n        </div>\r\n      </section>\r\n      {/* <PokeBerry /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}